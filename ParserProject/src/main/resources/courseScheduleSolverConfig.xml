<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!-- Define the model -->
  <solutionClass>scheduler.CourseSchedule</solutionClass>
  <entityClass>scheduler.Offering</entityClass>

  <!-- Define the score function -->
  <scoreDirectorFactory>
  	<EasyScoreCalculator>scheduler.ScoreCalculator</EasyScoreCalculator>
  </scoreDirectorFactory>
  
  <!-- Add optimization algorithms -->
  <termination>
    <minutesSpentLimit>10</minutesSpentLimit>
  </termination>
  
  <constructionHeuristic>
    <constructionHeuristicType>FIRST_FIT_DECREASING</constructionHeuristicType>
  </constructionHeuristic>
  
  <localSearch>
    <unionMoveSelector>
      <changeMoveSelector/>
      <swapMoveSelector>
        <filterClass>scheduler.solver.DifferentCourseSwapMoveFilter</filterClass>
      </swapMoveSelector>
    </unionMoveSelector>
    <!--<acceptor>-->
      <!--<entityTabuSize>9</entityTabuSize>-->
    <!--</acceptor>-->
    <!--<forager>-->
      <!--<acceptedCountLimit>900</acceptedCountLimit>-->
    <!--</forager>-->
    <acceptor>
      <lateAcceptanceSize>600</lateAcceptanceSize>
    </acceptor>
    <forager>
      <acceptedCountLimit>4</acceptedCountLimit>
    </forager>
    <!--<acceptor>-->
      <!--<stepCountingHillClimbingSize>200</stepCountingHillClimbingSize>-->
    <!--</acceptor>-->
    <!--<forager>-->
      <!--<acceptedCountLimit>1</acceptedCountLimit>-->
    <!--</forager>-->
  </localSearch>
</solver>